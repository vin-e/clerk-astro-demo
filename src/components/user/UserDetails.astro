---

---

<div
  class="bg-white overflow-hidden sm:rounded-lg"
  style={{
    boxShadow: `0px 20px 24px -4px rgba(16, 24, 40, 0.08)`,
  }}
>
  <div class="flex p-8">
    <h3 class="text-xl leading-6 font-semibold text-gray-900 my-auto">
      User
    </h3>
  </div>

  <div class="pb-6 max-h-96">
    <dl>
      <div class="px-8 py-2">
        <dt class="text-sm font-semibold">User ID</dt>
        <dd
          class="mt-1 text-sm text-gray-600 sm:mt-0 sm:col-span-2 flex gap-2"
          data-user-attr="id"
        >
        </dd>
      </div>
      <div class="px-8 py-2 hidden user-container">
        <dt class="text-sm font-semibold mb-1">First Name</dt>
        <dd class="mt-1 text-sm text-gray-600 sm:mt-0 sm:col-span-2" data-user-attr="firstName"></dd>
      </div>
      <div class="px-8 py-2 hidden user-container">
        <dt class="text-sm font-semibold mb-1">Last Name</dt>
        <dd class="mt-1 text-sm text-gray-600 sm:mt-0 sm:col-span-2" data-user-attr="lastName"></dd>
      </div>
      <div class="px-8 py-2 hidden user-container">
        <dt class="text-sm font-semibold mb-1">Email addresses</dt>
        <dd class="mt-1 text-sm text-gray-600 sm:mt-0 sm:col-span-2">
          <!-- {
            user.emailAddresses.map((email) => (
              <div key={email.id} class="flex gap-2 mb-1">
                {email.emailAddress}
                {user.primaryEmailAddressId === email.id && (
                  <span class="text-xs bg-primary-50 text-primary-700 rounded-2xl px-2 font-medium pt-[2px]">
                    Primary
                  </span>
                )}
              </div>
            ))
          } -->
        </dd>
      </div>
      <div class="px-8 py-2">
        <dt class="text-sm font-semibold mb-1">Profile Image</dt>
        <dd class="mt-1 text-sm text-gray-600 sm:mt-0 sm:col-span-2">
          <img src={user.imageUrl} class="rounded-full w-12 h-12" />
        </dd>
      </div>
    </dl>
  </div>
</div>

<script>
  import { auth } from '../../lib/authStore'

  auth.subscribe((clerk) => {
    if (clerk && clerk.isReady()) {
      const userFields = document.querySelectorAll('[data-user-attr]')!
      userFields.forEach((field) => {
        const attr = (field as HTMLElement).dataset.userAttr!
        field.innerHTML = clerk.user[attr]
        const container = field.closest('.user-container')
        if (container) {
          container.classList.remove('hidden')
        }
      })
    }
  })
</script>